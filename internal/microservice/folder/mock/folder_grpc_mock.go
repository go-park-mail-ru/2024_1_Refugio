// Code generated by MockGen. DO NOT EDIT.
// Source: ./folder_grpc.pb.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	proto "mail/internal/microservice/folder/proto"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	grpc "google.golang.org/grpc"
)

// MockFolderServiceClient is a mock of FolderServiceClient interface.
type MockFolderServiceClient struct {
	ctrl     *gomock.Controller
	recorder *MockFolderServiceClientMockRecorder
}

// MockFolderServiceClientMockRecorder is the mock recorder for MockFolderServiceClient.
type MockFolderServiceClientMockRecorder struct {
	mock *MockFolderServiceClient
}

// NewMockFolderServiceClient creates a new mock instance.
func NewMockFolderServiceClient(ctrl *gomock.Controller) *MockFolderServiceClient {
	mock := &MockFolderServiceClient{ctrl: ctrl}
	mock.recorder = &MockFolderServiceClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFolderServiceClient) EXPECT() *MockFolderServiceClientMockRecorder {
	return m.recorder
}

// AddEmailInFolder mocks base method.
func (m *MockFolderServiceClient) AddEmailInFolder(ctx context.Context, in *proto.FolderEmail, opts ...grpc.CallOption) (*proto.FolderEmailStatus, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "AddEmailInFolder", varargs...)
	ret0, _ := ret[0].(*proto.FolderEmailStatus)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AddEmailInFolder indicates an expected call of AddEmailInFolder.
func (mr *MockFolderServiceClientMockRecorder) AddEmailInFolder(ctx, in interface{}, opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddEmailInFolder", reflect.TypeOf((*MockFolderServiceClient)(nil).AddEmailInFolder), varargs...)
}

// CheckEmailProfile mocks base method.
func (m *MockFolderServiceClient) CheckEmailProfile(ctx context.Context, in *proto.EmailProfile, opts ...grpc.CallOption) (*proto.FolderEmailStatus, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "CheckEmailProfile", varargs...)
	ret0, _ := ret[0].(*proto.FolderEmailStatus)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CheckEmailProfile indicates an expected call of CheckEmailProfile.
func (mr *MockFolderServiceClientMockRecorder) CheckEmailProfile(ctx, in interface{}, opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckEmailProfile", reflect.TypeOf((*MockFolderServiceClient)(nil).CheckEmailProfile), varargs...)
}

// CheckFolderProfile mocks base method.
func (m *MockFolderServiceClient) CheckFolderProfile(ctx context.Context, in *proto.FolderProfile, opts ...grpc.CallOption) (*proto.FolderEmailStatus, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "CheckFolderProfile", varargs...)
	ret0, _ := ret[0].(*proto.FolderEmailStatus)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CheckFolderProfile indicates an expected call of CheckFolderProfile.
func (mr *MockFolderServiceClientMockRecorder) CheckFolderProfile(ctx, in interface{}, opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckFolderProfile", reflect.TypeOf((*MockFolderServiceClient)(nil).CheckFolderProfile), varargs...)
}

// CreateFolder mocks base method.
func (m *MockFolderServiceClient) CreateFolder(ctx context.Context, in *proto.Folder, opts ...grpc.CallOption) (*proto.FolderWithID, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "CreateFolder", varargs...)
	ret0, _ := ret[0].(*proto.FolderWithID)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateFolder indicates an expected call of CreateFolder.
func (mr *MockFolderServiceClientMockRecorder) CreateFolder(ctx, in interface{}, opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateFolder", reflect.TypeOf((*MockFolderServiceClient)(nil).CreateFolder), varargs...)
}

// DeleteEmailInFolder mocks base method.
func (m *MockFolderServiceClient) DeleteEmailInFolder(ctx context.Context, in *proto.FolderEmail, opts ...grpc.CallOption) (*proto.FolderEmailStatus, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DeleteEmailInFolder", varargs...)
	ret0, _ := ret[0].(*proto.FolderEmailStatus)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteEmailInFolder indicates an expected call of DeleteEmailInFolder.
func (mr *MockFolderServiceClientMockRecorder) DeleteEmailInFolder(ctx, in interface{}, opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteEmailInFolder", reflect.TypeOf((*MockFolderServiceClient)(nil).DeleteEmailInFolder), varargs...)
}

// DeleteFolder mocks base method.
func (m *MockFolderServiceClient) DeleteFolder(ctx context.Context, in *proto.DeleteFolderData, opts ...grpc.CallOption) (*proto.FolderStatus, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DeleteFolder", varargs...)
	ret0, _ := ret[0].(*proto.FolderStatus)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteFolder indicates an expected call of DeleteFolder.
func (mr *MockFolderServiceClientMockRecorder) DeleteFolder(ctx, in interface{}, opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteFolder", reflect.TypeOf((*MockFolderServiceClient)(nil).DeleteFolder), varargs...)
}

// GetAllEmailsInFolder mocks base method.
func (m *MockFolderServiceClient) GetAllEmailsInFolder(ctx context.Context, in *proto.GetAllEmailsInFolderData, opts ...grpc.CallOption) (*proto.ObjectsEmail, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetAllEmailsInFolder", varargs...)
	ret0, _ := ret[0].(*proto.ObjectsEmail)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllEmailsInFolder indicates an expected call of GetAllEmailsInFolder.
func (mr *MockFolderServiceClientMockRecorder) GetAllEmailsInFolder(ctx, in interface{}, opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllEmailsInFolder", reflect.TypeOf((*MockFolderServiceClient)(nil).GetAllEmailsInFolder), varargs...)
}

// GetAllFolders mocks base method.
func (m *MockFolderServiceClient) GetAllFolders(ctx context.Context, in *proto.GetAllFoldersData, opts ...grpc.CallOption) (*proto.Folders, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetAllFolders", varargs...)
	ret0, _ := ret[0].(*proto.Folders)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllFolders indicates an expected call of GetAllFolders.
func (mr *MockFolderServiceClientMockRecorder) GetAllFolders(ctx, in interface{}, opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllFolders", reflect.TypeOf((*MockFolderServiceClient)(nil).GetAllFolders), varargs...)
}

// GetAllNameFolders mocks base method.
func (m *MockFolderServiceClient) GetAllNameFolders(ctx context.Context, in *proto.GetAllNameFoldersRequest, opts ...grpc.CallOption) (*proto.Folders, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetAllNameFolders", varargs...)
	ret0, _ := ret[0].(*proto.Folders)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllNameFolders indicates an expected call of GetAllNameFolders.
func (mr *MockFolderServiceClientMockRecorder) GetAllNameFolders(ctx, in interface{}, opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllNameFolders", reflect.TypeOf((*MockFolderServiceClient)(nil).GetAllNameFolders), varargs...)
}

// UpdateFolder mocks base method.
func (m *MockFolderServiceClient) UpdateFolder(ctx context.Context, in *proto.Folder, opts ...grpc.CallOption) (*proto.FolderStatus, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "UpdateFolder", varargs...)
	ret0, _ := ret[0].(*proto.FolderStatus)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateFolder indicates an expected call of UpdateFolder.
func (mr *MockFolderServiceClientMockRecorder) UpdateFolder(ctx, in interface{}, opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateFolder", reflect.TypeOf((*MockFolderServiceClient)(nil).UpdateFolder), varargs...)
}

// MockFolderServiceServer is a mock of FolderServiceServer interface.
type MockFolderServiceServer struct {
	ctrl     *gomock.Controller
	recorder *MockFolderServiceServerMockRecorder
}

// MockFolderServiceServerMockRecorder is the mock recorder for MockFolderServiceServer.
type MockFolderServiceServerMockRecorder struct {
	mock *MockFolderServiceServer
}

// NewMockFolderServiceServer creates a new mock instance.
func NewMockFolderServiceServer(ctrl *gomock.Controller) *MockFolderServiceServer {
	mock := &MockFolderServiceServer{ctrl: ctrl}
	mock.recorder = &MockFolderServiceServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFolderServiceServer) EXPECT() *MockFolderServiceServerMockRecorder {
	return m.recorder
}

// AddEmailInFolder mocks base method.
func (m *MockFolderServiceServer) AddEmailInFolder(arg0 context.Context, arg1 *proto.FolderEmail) (*proto.FolderEmailStatus, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddEmailInFolder", arg0, arg1)
	ret0, _ := ret[0].(*proto.FolderEmailStatus)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AddEmailInFolder indicates an expected call of AddEmailInFolder.
func (mr *MockFolderServiceServerMockRecorder) AddEmailInFolder(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddEmailInFolder", reflect.TypeOf((*MockFolderServiceServer)(nil).AddEmailInFolder), arg0, arg1)
}

// CheckEmailProfile mocks base method.
func (m *MockFolderServiceServer) CheckEmailProfile(arg0 context.Context, arg1 *proto.EmailProfile) (*proto.FolderEmailStatus, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckEmailProfile", arg0, arg1)
	ret0, _ := ret[0].(*proto.FolderEmailStatus)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CheckEmailProfile indicates an expected call of CheckEmailProfile.
func (mr *MockFolderServiceServerMockRecorder) CheckEmailProfile(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckEmailProfile", reflect.TypeOf((*MockFolderServiceServer)(nil).CheckEmailProfile), arg0, arg1)
}

// CheckFolderProfile mocks base method.
func (m *MockFolderServiceServer) CheckFolderProfile(arg0 context.Context, arg1 *proto.FolderProfile) (*proto.FolderEmailStatus, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckFolderProfile", arg0, arg1)
	ret0, _ := ret[0].(*proto.FolderEmailStatus)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CheckFolderProfile indicates an expected call of CheckFolderProfile.
func (mr *MockFolderServiceServerMockRecorder) CheckFolderProfile(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckFolderProfile", reflect.TypeOf((*MockFolderServiceServer)(nil).CheckFolderProfile), arg0, arg1)
}

// CreateFolder mocks base method.
func (m *MockFolderServiceServer) CreateFolder(arg0 context.Context, arg1 *proto.Folder) (*proto.FolderWithID, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateFolder", arg0, arg1)
	ret0, _ := ret[0].(*proto.FolderWithID)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateFolder indicates an expected call of CreateFolder.
func (mr *MockFolderServiceServerMockRecorder) CreateFolder(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateFolder", reflect.TypeOf((*MockFolderServiceServer)(nil).CreateFolder), arg0, arg1)
}

// DeleteEmailInFolder mocks base method.
func (m *MockFolderServiceServer) DeleteEmailInFolder(arg0 context.Context, arg1 *proto.FolderEmail) (*proto.FolderEmailStatus, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteEmailInFolder", arg0, arg1)
	ret0, _ := ret[0].(*proto.FolderEmailStatus)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteEmailInFolder indicates an expected call of DeleteEmailInFolder.
func (mr *MockFolderServiceServerMockRecorder) DeleteEmailInFolder(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteEmailInFolder", reflect.TypeOf((*MockFolderServiceServer)(nil).DeleteEmailInFolder), arg0, arg1)
}

// DeleteFolder mocks base method.
func (m *MockFolderServiceServer) DeleteFolder(arg0 context.Context, arg1 *proto.DeleteFolderData) (*proto.FolderStatus, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteFolder", arg0, arg1)
	ret0, _ := ret[0].(*proto.FolderStatus)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteFolder indicates an expected call of DeleteFolder.
func (mr *MockFolderServiceServerMockRecorder) DeleteFolder(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteFolder", reflect.TypeOf((*MockFolderServiceServer)(nil).DeleteFolder), arg0, arg1)
}

// GetAllEmailsInFolder mocks base method.
func (m *MockFolderServiceServer) GetAllEmailsInFolder(arg0 context.Context, arg1 *proto.GetAllEmailsInFolderData) (*proto.ObjectsEmail, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllEmailsInFolder", arg0, arg1)
	ret0, _ := ret[0].(*proto.ObjectsEmail)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllEmailsInFolder indicates an expected call of GetAllEmailsInFolder.
func (mr *MockFolderServiceServerMockRecorder) GetAllEmailsInFolder(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllEmailsInFolder", reflect.TypeOf((*MockFolderServiceServer)(nil).GetAllEmailsInFolder), arg0, arg1)
}

// GetAllFolders mocks base method.
func (m *MockFolderServiceServer) GetAllFolders(arg0 context.Context, arg1 *proto.GetAllFoldersData) (*proto.Folders, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllFolders", arg0, arg1)
	ret0, _ := ret[0].(*proto.Folders)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllFolders indicates an expected call of GetAllFolders.
func (mr *MockFolderServiceServerMockRecorder) GetAllFolders(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllFolders", reflect.TypeOf((*MockFolderServiceServer)(nil).GetAllFolders), arg0, arg1)
}

// GetAllNameFolders mocks base method.
func (m *MockFolderServiceServer) GetAllNameFolders(arg0 context.Context, arg1 *proto.GetAllNameFoldersRequest) (*proto.Folders, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllNameFolders", arg0, arg1)
	ret0, _ := ret[0].(*proto.Folders)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllNameFolders indicates an expected call of GetAllNameFolders.
func (mr *MockFolderServiceServerMockRecorder) GetAllNameFolders(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllNameFolders", reflect.TypeOf((*MockFolderServiceServer)(nil).GetAllNameFolders), arg0, arg1)
}

// UpdateFolder mocks base method.
func (m *MockFolderServiceServer) UpdateFolder(arg0 context.Context, arg1 *proto.Folder) (*proto.FolderStatus, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateFolder", arg0, arg1)
	ret0, _ := ret[0].(*proto.FolderStatus)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateFolder indicates an expected call of UpdateFolder.
func (mr *MockFolderServiceServerMockRecorder) UpdateFolder(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateFolder", reflect.TypeOf((*MockFolderServiceServer)(nil).UpdateFolder), arg0, arg1)
}

// mustEmbedUnimplementedFolderServiceServer mocks base method.
func (m *MockFolderServiceServer) mustEmbedUnimplementedFolderServiceServer() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "mustEmbedUnimplementedFolderServiceServer")
}

// mustEmbedUnimplementedFolderServiceServer indicates an expected call of mustEmbedUnimplementedFolderServiceServer.
func (mr *MockFolderServiceServerMockRecorder) mustEmbedUnimplementedFolderServiceServer() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "mustEmbedUnimplementedFolderServiceServer", reflect.TypeOf((*MockFolderServiceServer)(nil).mustEmbedUnimplementedFolderServiceServer))
}

// MockUnsafeFolderServiceServer is a mock of UnsafeFolderServiceServer interface.
type MockUnsafeFolderServiceServer struct {
	ctrl     *gomock.Controller
	recorder *MockUnsafeFolderServiceServerMockRecorder
}

// MockUnsafeFolderServiceServerMockRecorder is the mock recorder for MockUnsafeFolderServiceServer.
type MockUnsafeFolderServiceServerMockRecorder struct {
	mock *MockUnsafeFolderServiceServer
}

// NewMockUnsafeFolderServiceServer creates a new mock instance.
func NewMockUnsafeFolderServiceServer(ctrl *gomock.Controller) *MockUnsafeFolderServiceServer {
	mock := &MockUnsafeFolderServiceServer{ctrl: ctrl}
	mock.recorder = &MockUnsafeFolderServiceServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUnsafeFolderServiceServer) EXPECT() *MockUnsafeFolderServiceServerMockRecorder {
	return m.recorder
}

// mustEmbedUnimplementedFolderServiceServer mocks base method.
func (m *MockUnsafeFolderServiceServer) mustEmbedUnimplementedFolderServiceServer() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "mustEmbedUnimplementedFolderServiceServer")
}

// mustEmbedUnimplementedFolderServiceServer indicates an expected call of mustEmbedUnimplementedFolderServiceServer.
func (mr *MockUnsafeFolderServiceServerMockRecorder) mustEmbedUnimplementedFolderServiceServer() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "mustEmbedUnimplementedFolderServiceServer", reflect.TypeOf((*MockUnsafeFolderServiceServer)(nil).mustEmbedUnimplementedFolderServiceServer))
}
