basePath: /
definitions:
  response.AnswerSwag:
    properties:
      id:
        type: integer
      login:
        type: string
      mark:
        type: integer
      question_id:
        type: integer
      text:
        type: string
    type: object
  response.EmailOtherSwag:
    properties:
      dateOfDispatch:
        type: string
      deleted:
        type: boolean
      draftStatus:
        type: boolean
      id:
        type: string
      mark:
        type: boolean
      readStatus:
        type: boolean
      recipientEmail:
        type: string
      replyToEmailId:
        type: integer
      senderEmail:
        type: string
      spamStatus:
        type: boolean
      text:
        type: string
      topic:
        type: string
    type: object
  response.EmailSwag:
    properties:
      dateOfDispatch:
        type: string
      deleted:
        type: boolean
      draftStatus:
        type: boolean
      id:
        type: integer
      mark:
        type: boolean
      readStatus:
        type: boolean
      recipientEmail:
        type: string
      replyToEmailId:
        type: integer
      senderEmail:
        type: string
      spamStatus:
        type: boolean
      text:
        type: string
      topic:
        type: string
    type: object
  response.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  response.FolderEmailGoogleSwag:
    properties:
      emailId:
        type: string
      folderId:
        type: string
    type: object
  response.FolderEmailSwag:
    properties:
      emailId:
        type: integer
      folderId:
        type: integer
    type: object
  response.FolderSwag:
    properties:
      name:
        type: string
    type: object
  response.QuestionSwag:
    properties:
      dop_question:
        type: string
      id:
        type: integer
      max_text:
        type: string
      min_text:
        type: string
      text:
        type: string
    type: object
  response.Response:
    properties:
      body: {}
      status:
        type: integer
    type: object
  response.UserGenderSwag:
    enum:
    - Male
    - Female
    - Other
    type: string
    x-enum-varnames:
    - Male
    - Female
    - Other
  response.UserGoogleSwag:
    properties:
      avatar:
        type: string
      birthday:
        type: string
      description:
        type: string
      firstname:
        type: string
      gender:
        $ref: '#/definitions/response.UserGenderSwag'
      id:
        type: string
      login:
        type: string
      middlename:
        type: string
      phonenumber:
        type: string
      surname:
        type: string
    type: object
  response.UserSwag:
    properties:
      avatar:
        type: string
      birthday:
        type: string
      description:
        type: string
      firstname:
        type: string
      gender:
        $ref: '#/definitions/response.UserGenderSwag'
      id:
        type: integer
      login:
        type: string
      middlename:
        type: string
      password:
        type: string
      phonenumber:
        type: string
      surname:
        type: string
    type: object
  response.UserVKSwag:
    properties:
      birthday:
        type: string
      firstname:
        type: string
      gender:
        $ref: '#/definitions/response.UserGenderSwag'
      id:
        type: integer
      login:
        type: string
      surname:
        type: string
      vkId:
        type: integer
    type: object
host: localhost:8080
info:
  contact: {}
  description: API server for MailHub
  title: API MailHub
  version: "1.0"
paths:
  /api/v1/answers:
    post:
      consumes:
      - application/json
      description: AddAnswer Handles answer.
      parameters:
      - description: CSRF Token
        in: header
        name: X-Csrf-Token
        required: true
        type: string
      - description: Answer message in JSON format
        in: body
        name: question
        required: true
        schema:
          $ref: '#/definitions/response.AnswerSwag'
      produces:
      - application/json
      responses:
        "200":
          description: Add answer successful
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to add answer
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: AddAnswer answer
      tags:
      - question
  /api/v1/auth/gAuth:
    get:
      consumes:
      - application/json
      description: GoogleAuth Handles user.
      parameters:
      - description: code from oauth
        in: query
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Auth successful
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Invalid credentials
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: User not fount
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Failed to create session
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: GoogleAuth User
      tags:
      - auth-gmail
  /api/v1/auth/getAuthURL:
    get:
      consumes:
      - application/json
      description: GetAuthURL Handles url.
      produces:
      - application/json
      responses:
        "200":
          description: Auth successful
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Failed to create url
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: GetAuthURL
      tags:
      - auth-gmail
  /api/v1/auth/login:
    post:
      consumes:
      - application/json
      description: Login Handles user.
      parameters:
      - description: User credentials for login
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/response.UserSwag'
      produces:
      - application/json
      responses:
        "200":
          description: Login successful
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Invalid credentials
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to create session
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Login User
      tags:
      - auth
  /api/v1/auth/logout:
    post:
      description: Handles user logout.
      produces:
      - application/json
      responses:
        "200":
          description: Logout successful
          schema:
            $ref: '#/definitions/response.Response'
      summary: User logout
      tags:
      - auth
  /api/v1/auth/signup:
    post:
      consumes:
      - application/json
      description: Handles user signup.
      parameters:
      - description: New user details for signup
        in: body
        name: newUser
        required: true
        schema:
          $ref: '#/definitions/response.UserSwag'
      produces:
      - application/json
      responses:
        "200":
          description: Signup successful
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to add user
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: User signup
      tags:
      - auth
  /api/v1/auth/signupGMailUser:
    post:
      consumes:
      - application/json
      description: Handles user signup Gmail.
      parameters:
      - description: New user details for signup
        in: body
        name: newUser
        required: true
        schema:
          $ref: '#/definitions/response.UserGoogleSwag'
      produces:
      - application/json
      responses:
        "200":
          description: Signup successful
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to add user
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: User signup Gmail
      tags:
      - auth-gmail
  /api/v1/email/{id}:
    get:
      description: Get an email message by its unique identifier
      parameters:
      - description: ID of the email message
        in: path
        name: id
        required: true
        type: integer
      - description: CSRF Token
        in: header
        name: X-Csrf-Token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Email message data
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad id in request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Not Authorized
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Email not found
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get an email message by ID
      tags:
      - emails
  /api/v1/email/{id}/addattachment:
    post:
      consumes:
      - multipart/form-data
      description: Add an attachment to an email message by its ID
      parameters:
      - description: ID of the email message
        in: path
        name: id
        required: true
        type: integer
      - description: Attachment file to upload
        in: formData
        name: file
        required: true
        type: file
      - description: CSRF Token
        in: header
        name: X-Csrf-Token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Attachment added successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad id in request or bad JSON in request
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Failed to add attachment
          schema:
            $ref: '#/definitions/response.Response'
      summary: Add an attachment to an email message
      tags:
      - files
  /api/v1/email/{id}/file/{file-id}:
    post:
      description: Adds a file as an attachment to a specified email message
      parameters:
      - description: Email ID
        in: path
        name: id
        required: true
        type: integer
      - description: File ID
        in: path
        name: file-id
        required: true
        type: integer
      - description: CSRF Token
        in: header
        name: X-Csrf-Token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: File added successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad ID in request or error processing file
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Failed to add file
          schema:
            $ref: '#/definitions/response.Response'
      summary: Add a file to an email message
      tags:
      - files
  /api/v1/email/{id}/get/files/:
    get:
      description: Retrieve files associated with an email by its ID from the email
        service
      parameters:
      - description: ID of the email
        in: path
        name: id
        required: true
        type: integer
      - description: CSRF Token
        in: header
        name: X-Csrf-Token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Files retrieved successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad ID in request
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Files not found
          schema:
            $ref: '#/definitions/response.Response'
      summary: Retrieve files by email ID
      tags:
      - files
  /api/v1/email/adddraft:
    post:
      consumes:
      - application/json
      description: AddDraft a new draft email message to the system
      parameters:
      - description: CSRF Token
        in: header
        name: X-Csrf-Token
        required: true
        type: string
      - description: Email message in JSON format
        in: body
        name: email
        required: true
        schema:
          $ref: '#/definitions/response.EmailSwag'
      produces:
      - application/json
      responses:
        "200":
          description: ID of the send email message
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad JSON in request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Not Authorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Failed to add email message
          schema:
            $ref: '#/definitions/response.Response'
      summary: AddDraft a new draft email message
      tags:
      - emails
  /api/v1/email/addfile:
    post:
      consumes:
      - multipart/form-data
      description: Add a file to an email message
      parameters:
      - description: Attachment file to upload
        in: formData
        name: file
        required: true
        type: file
      - description: CSRF Token
        in: header
        name: X-Csrf-Token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: File added successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad id in request or bad JSON in request
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Failed to add file
          schema:
            $ref: '#/definitions/response.Response'
      summary: Add a file to an email message
      tags:
      - files
  /api/v1/email/delete/{id}:
    delete:
      description: Delete an email message based on its identifier
      parameters:
      - description: ID of the email message
        in: path
        name: id
        required: true
        type: integer
      - description: CSRF Token
        in: header
        name: X-Csrf-Token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Deletion success status
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad id
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Not Authorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Failed to delete email message
          schema:
            $ref: '#/definitions/response.Response'
      summary: Delete an email message
      tags:
      - emails
  /api/v1/email/delete/file/{id}:
    delete:
      description: Delete a file by its ID from the email service
      parameters:
      - description: ID of the file
        in: path
        name: id
        required: true
        type: integer
      - description: CSRF Token
        in: header
        name: X-Csrf-Token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: File deleted successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad ID in request
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Failed to delete file
          schema:
            $ref: '#/definitions/response.Response'
      summary: Delete a file by its ID
      tags:
      - files
  /api/v1/email/get/file/{id}:
    get:
      description: Retrieve a file by its ID from the email service
      parameters:
      - description: ID of the file
        in: path
        name: id
        required: true
        type: integer
      - description: CSRF Token
        in: header
        name: X-Csrf-Token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: File retrieved successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad ID in request
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: File not found
          schema:
            $ref: '#/definitions/response.Response'
      summary: Retrieve a file by its ID
      tags:
      - files
  /api/v1/email/send:
    post:
      consumes:
      - application/json
      description: Send a new email message to the system
      parameters:
      - description: CSRF Token
        in: header
        name: X-Csrf-Token
        required: true
        type: string
      - description: Email message in JSON format
        in: body
        name: email
        required: true
        schema:
          $ref: '#/definitions/response.EmailSwag'
      produces:
      - application/json
      responses:
        "200":
          description: ID of the send email message
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad JSON in request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Not Authorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Failed to add email message
          schema:
            $ref: '#/definitions/response.Response'
      summary: Send a new email message
      tags:
      - emails
  /api/v1/email/sendToOtherDomain/{id}:
    post:
      consumes:
      - application/json
      description: SendEmailToOtherDomains send an email a third-party domain
      parameters:
      - description: ID of the email message
        in: path
        name: id
        required: true
        type: integer
      - description: CSRF Token
        in: header
        name: X-Csrf-Token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ID of the send email message
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad JSON in request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Not Authorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Failed to add email message
          schema:
            $ref: '#/definitions/response.Response'
      summary: SendEmailToOtherDomains send an email a third-party domain
      tags:
      - emails
  /api/v1/email/update/{id}:
    put:
      consumes:
      - application/json
      description: Update an existing email message based on its identifier
      parameters:
      - description: CSRF Token
        in: header
        name: X-Csrf-Token
        required: true
        type: string
      - description: ID of the email message
        in: path
        name: id
        required: true
        type: integer
      - description: Email message in JSON format
        in: body
        name: email
        required: true
        schema:
          $ref: '#/definitions/response.EmailSwag'
      produces:
      - application/json
      responses:
        "200":
          description: Update success status
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad id or Bad JSON
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Not Authorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Failed to update email message
          schema:
            $ref: '#/definitions/response.Response'
      summary: Update an email message
      tags:
      - emails
  /api/v1/email/update/file/{id}:
    put:
      description: Update a file by its ID in the email service
      parameters:
      - description: ID of the file
        in: path
        name: id
        required: true
        type: integer
      - description: Updated file to upload
        in: formData
        name: file
        required: true
        type: file
      - description: CSRF Token
        in: header
        name: X-Csrf-Token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: File updated successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad ID in request
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Failed to update file
          schema:
            $ref: '#/definitions/response.Response'
      summary: Update a file by its ID
      tags:
      - files
  /api/v1/emails/draft:
    get:
      description: Get a list of all email messages
      parameters:
      - description: CSRF Token
        in: header
        name: X-Csrf-Token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of all email messages
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Not Authorized
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: DB error
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: JSON encoding error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Display the list of email messages
      tags:
      - emails
  /api/v1/emails/incoming:
    get:
      description: Get a list of all email messages
      parameters:
      - description: CSRF Token
        in: header
        name: X-Csrf-Token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of all email messages
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Not Authorized
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: DB error
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: JSON encoding error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Display the list of email messages
      tags:
      - emails
  /api/v1/emails/sent:
    get:
      description: Get a list of all email messages
      parameters:
      - description: CSRF Token
        in: header
        name: X-Csrf-Token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of all email messages
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Not Authorized
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: DB error
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: JSON encoding error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Display the list of email messages
      tags:
      - emails
  /api/v1/emails/spam:
    get:
      description: Get a list of all email messages
      parameters:
      - description: CSRF Token
        in: header
        name: X-Csrf-Token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of all email messages
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Not Authorized
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: DB error
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: JSON encoding error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Display the list of email messages
      tags:
      - emails
  /api/v1/folder/add:
    post:
      consumes:
      - application/json
      description: Add a new folder message to the system
      parameters:
      - description: CSRF Token
        in: header
        name: X-Csrf-Token
        required: true
        type: string
      - description: Folder message in JSON format
        in: body
        name: folder
        required: true
        schema:
          $ref: '#/definitions/response.FolderSwag'
      produces:
      - application/json
      responses:
        "200":
          description: ID of the send folder message
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad JSON in request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Not Authorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Failed to add folder message
          schema:
            $ref: '#/definitions/response.Response'
      summary: Add a new folder message
      tags:
      - folders
  /api/v1/folder/add_email:
    post:
      consumes:
      - application/json
      description: AddEmailInFolder a new folder message to the system
      parameters:
      - description: CSRF Token
        in: header
        name: X-Csrf-Token
        required: true
        type: string
      - description: Folder message in JSON format
        in: body
        name: folder
        required: true
        schema:
          $ref: '#/definitions/response.FolderEmailSwag'
      produces:
      - application/json
      responses:
        "200":
          description: ID of the send folder message
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad JSON in request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Not Authorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Failed to add folder message
          schema:
            $ref: '#/definitions/response.Response'
      summary: AddEmailInFolder a new folder message
      tags:
      - folders
  /api/v1/folder/all:
    get:
      description: GetAll folders users
      parameters:
      - description: CSRF Token
        in: header
        name: X-Csrf-Token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ID of the send folder message
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad JSON in request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Not Authorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Failed to get all folders
          schema:
            $ref: '#/definitions/response.Response'
      summary: GetAll get all folders
      tags:
      - folders
  /api/v1/folder/all_emails/{id}:
    get:
      description: GetAllEmailsInFolder emails in folder users
      parameters:
      - description: ID of the folder
        in: path
        name: id
        required: true
        type: integer
      - description: CSRF Token
        in: header
        name: X-Csrf-Token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ID of the send folder message
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad JSON in request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Not Authorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Failed to get all emails in folder
          schema:
            $ref: '#/definitions/response.Response'
      summary: GetAllEmailsInFolder get all emails in folder
      tags:
      - folders
  /api/v1/folder/allname/{id}:
    get:
      description: GetAllName folders name users
      parameters:
      - description: ID of the email
        in: path
        name: id
        required: true
        type: integer
      - description: CSRF Token
        in: header
        name: X-Csrf-Token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ID of the send folder message
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad JSON in request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Not Authorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Failed to get all folders
          schema:
            $ref: '#/definitions/response.Response'
      summary: GetAllName get all name folders
      tags:
      - folders
  /api/v1/folder/delete/{id}:
    delete:
      description: Delete folder a user
      parameters:
      - description: ID of the folder
        in: path
        name: id
        required: true
        type: integer
      - description: CSRF Token
        in: header
        name: X-Csrf-Token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Deletion success status
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad id
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Not Authorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Failed to delete folder
          schema:
            $ref: '#/definitions/response.Response'
      summary: Delete folder a user
      tags:
      - folders
  /api/v1/folder/delete_email:
    delete:
      consumes:
      - application/json
      description: DeleteEmailInFolder a new folder message to the system
      parameters:
      - description: CSRF Token
        in: header
        name: X-Csrf-Token
        required: true
        type: string
      - description: Folder message in JSON format
        in: body
        name: folder
        required: true
        schema:
          $ref: '#/definitions/response.FolderEmailSwag'
      produces:
      - application/json
      responses:
        "200":
          description: ID of the folder message
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad JSON in request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Not Authorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Failed to delete folder message
          schema:
            $ref: '#/definitions/response.Response'
      summary: DeleteEmailInFolder a new folder message
      tags:
      - folders
  /api/v1/folder/update/{id}:
    put:
      description: Update folder a user
      parameters:
      - description: CSRF Token
        in: header
        name: X-Csrf-Token
        required: true
        type: string
      - description: ID of the folder message
        in: path
        name: id
        required: true
        type: integer
      - description: Folder message in JSON format
        in: body
        name: folder
        required: true
        schema:
          $ref: '#/definitions/response.FolderSwag'
      produces:
      - application/json
      responses:
        "200":
          description: Update success status
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad id
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Not Authorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Failed to update folder
          schema:
            $ref: '#/definitions/response.Response'
      summary: Update folder a user
      tags:
      - folders
  /api/v1/gmail/draft/{id}:
    get:
      description: Get a draft message by its unique identifier
      parameters:
      - description: ID of the draft message
        in: path
        name: id
        required: true
        type: string
      - description: CSRF Token
        in: header
        name: X-Csrf-Token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Draft message data
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad id in request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Not Authorized
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Email not found
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get a draft message by ID
      tags:
      - drafts-gmail
  /api/v1/gmail/draft/adddraft:
    post:
      consumes:
      - application/json
      description: AddDraft a new draft message to the system
      parameters:
      - description: CSRF Token
        in: header
        name: X-Csrf-Token
        required: true
        type: string
      - description: Draft message in JSON format
        in: body
        name: draft
        required: true
        schema:
          $ref: '#/definitions/response.EmailOtherSwag'
      produces:
      - application/json
      responses:
        "200":
          description: ID of the draft message
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad JSON in request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Not Authorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Failed to add draft message
          schema:
            $ref: '#/definitions/response.Response'
      summary: AddDraft a new draft message
      tags:
      - drafts-gmail
  /api/v1/gmail/draft/delete/{id}:
    delete:
      description: DeleteDraft an draft message based on its identifier
      parameters:
      - description: ID of the draft message
        in: path
        name: id
        required: true
        type: string
      - description: CSRF Token
        in: header
        name: X-Csrf-Token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Deletion success status
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad id
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Not Authorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Failed to delete draft message
          schema:
            $ref: '#/definitions/response.Response'
      summary: DeleteDraft an draft message
      tags:
      - drafts-gmail
  /api/v1/gmail/draft/sendDraft:
    post:
      consumes:
      - application/json
      description: SendDraft a new sent draft message to the system
      parameters:
      - description: CSRF Token
        in: header
        name: X-Csrf-Token
        required: true
        type: string
      - description: Draft message in JSON format
        in: body
        name: draft
        required: true
        schema:
          $ref: '#/definitions/response.EmailOtherSwag'
      produces:
      - application/json
      responses:
        "200":
          description: ID of the send draft message
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad JSON in request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Not Authorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Failed to send draft message
          schema:
            $ref: '#/definitions/response.Response'
      summary: SendDraft a new sent draft message
      tags:
      - drafts-gmail
  /api/v1/gmail/draft/update/{id}:
    put:
      consumes:
      - application/json
      description: UpdateDraft an update draft message to the system
      parameters:
      - description: CSRF Token
        in: header
        name: X-Csrf-Token
        required: true
        type: string
      - description: ID of the draft message
        in: path
        name: id
        required: true
        type: string
      - description: Draft message in JSON format
        in: body
        name: draft
        required: true
        schema:
          $ref: '#/definitions/response.EmailOtherSwag'
      produces:
      - application/json
      responses:
        "200":
          description: ID of the update draft message
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad JSON in request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Not Authorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Failed to update draft message
          schema:
            $ref: '#/definitions/response.Response'
      summary: UpdateDraft an update draft message
      tags:
      - drafts-gmail
  /api/v1/gmail/drafts:
    get:
      description: Get a list of all draft messages
      parameters:
      - description: CSRF Token
        in: header
        name: X-Csrf-Token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of all draft messages
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Not Authorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: JSON encoding error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Display the list of draft messages
      tags:
      - drafts-gmail
  /api/v1/gmail/email/{id}:
    get:
      description: Get an email message by its unique identifier
      parameters:
      - description: ID of the email message
        in: path
        name: id
        required: true
        type: string
      - description: CSRF Token
        in: header
        name: X-Csrf-Token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Email message data
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad id in request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Not Authorized
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Email not found
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get an email message by ID
      tags:
      - emails-gmail
  /api/v1/gmail/email/delete/{id}:
    delete:
      description: Delete an email message based on its identifier
      parameters:
      - description: ID of the email message
        in: path
        name: id
        required: true
        type: string
      - description: CSRF Token
        in: header
        name: X-Csrf-Token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Deletion success status
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad id
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Not Authorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Failed to delete email message
          schema:
            $ref: '#/definitions/response.Response'
      summary: Delete an email message
      tags:
      - emails-gmail
  /api/v1/gmail/email/send:
    post:
      consumes:
      - application/json
      description: Send a new email message to the system
      parameters:
      - description: CSRF Token
        in: header
        name: X-Csrf-Token
        required: true
        type: string
      - description: Email message in JSON format
        in: body
        name: email
        required: true
        schema:
          $ref: '#/definitions/response.EmailOtherSwag'
      produces:
      - application/json
      responses:
        "200":
          description: ID of the send email message
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad JSON in request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Not Authorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Failed to add email message
          schema:
            $ref: '#/definitions/response.Response'
      summary: Send a new email message
      tags:
      - emails-gmail
  /api/v1/gmail/email/update/{id}:
    put:
      consumes:
      - application/json
      description: Update an update email message to the system
      parameters:
      - description: CSRF Token
        in: header
        name: X-Csrf-Token
        required: true
        type: string
      - description: ID of the email message
        in: path
        name: id
        required: true
        type: string
      - description: Email message in JSON format
        in: body
        name: email
        required: true
        schema:
          $ref: '#/definitions/response.EmailOtherSwag'
      produces:
      - application/json
      responses:
        "200":
          description: ID of the update email message
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad JSON in request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Not Authorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Failed to update email message
          schema:
            $ref: '#/definitions/response.Response'
      summary: Update an email draft message
      tags:
      - emails-gmail
  /api/v1/gmail/emails/incoming:
    get:
      description: Get a list of all email messages
      parameters:
      - description: CSRF Token
        in: header
        name: X-Csrf-Token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of all email messages
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Not Authorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: JSON encoding error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Display the list of email messages
      tags:
      - emails-gmail
  /api/v1/gmail/emails/sent:
    get:
      description: Get a list of all email messages
      parameters:
      - description: CSRF Token
        in: header
        name: X-Csrf-Token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of all email messages
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Not Authorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: JSON encoding error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Display the list of email messages
      tags:
      - emails-gmail
  /api/v1/gmail/emails/spam:
    get:
      description: Get a list of all email messages
      parameters:
      - description: CSRF Token
        in: header
        name: X-Csrf-Token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of all email messages
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Not Authorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: JSON encoding error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Display the list of email messages
      tags:
      - emails-gmail
  /api/v1/gmail/label/{name}/emails:
    get:
      description: Get a list of all emails in label
      parameters:
      - description: CSRF Token
        in: header
        name: X-Csrf-Token
        required: true
        type: string
      - description: Name of the label message
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of all emails in label
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Not Authorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: JSON encoding error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Display the list of emails in label
      tags:
      - labels-gmail
  /api/v1/gmail/label/add_email:
    post:
      consumes:
      - application/json
      description: AddEmailInLabel an email in label to the system
      parameters:
      - description: CSRF Token
        in: header
        name: X-Csrf-Token
        required: true
        type: string
      - description: Label message in JSON format
        in: body
        name: label
        required: true
        schema:
          $ref: '#/definitions/response.FolderEmailGoogleSwag'
      produces:
      - application/json
      responses:
        "200":
          description: Success of the add email in label
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad JSON in request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Not Authorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Failed to add email in label
          schema:
            $ref: '#/definitions/response.Response'
      summary: AddEmailInLabel an email in label
      tags:
      - labels-gmail
  /api/v1/gmail/label/create:
    post:
      consumes:
      - application/json
      description: CreateLabel a new label to the system
      parameters:
      - description: CSRF Token
        in: header
        name: X-Csrf-Token
        required: true
        type: string
      - description: Label message in JSON format
        in: body
        name: label
        required: true
        schema:
          $ref: '#/definitions/response.FolderSwag'
      produces:
      - application/json
      responses:
        "200":
          description: ID of the create label
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad JSON in request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Not Authorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Failed to add email message
          schema:
            $ref: '#/definitions/response.Response'
      summary: CreateLabel a new label
      tags:
      - labels-gmail
  /api/v1/gmail/label/delete/{id}:
    delete:
      description: DeleteLabel label a user
      parameters:
      - description: CSRF Token
        in: header
        name: X-Csrf-Token
        required: true
        type: string
      - description: ID of the label
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Deletion success status
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad id
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Not Authorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Failed to delete label
          schema:
            $ref: '#/definitions/response.Response'
      summary: DeleteLabel label a user
      tags:
      - labels-gmail
  /api/v1/gmail/label/delete_email:
    delete:
      consumes:
      - application/json
      description: DeleteEmailInLabel an email in label to the system
      parameters:
      - description: CSRF Token
        in: header
        name: X-Csrf-Token
        required: true
        type: string
      - description: Label message in JSON format
        in: body
        name: label
        required: true
        schema:
          $ref: '#/definitions/response.FolderEmailGoogleSwag'
      produces:
      - application/json
      responses:
        "200":
          description: Success of the delete email in label
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad JSON in request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Not Authorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Failed to delete email in label
          schema:
            $ref: '#/definitions/response.Response'
      summary: DeleteEmailInLabel an email in label
      tags:
      - labels-gmail
  /api/v1/gmail/label/update/{id}:
    put:
      description: UpdateLabel label a user
      parameters:
      - description: CSRF Token
        in: header
        name: X-Csrf-Token
        required: true
        type: string
      - description: ID of the label message
        in: path
        name: id
        required: true
        type: string
      - description: Label message in JSON format
        in: body
        name: label
        required: true
        schema:
          $ref: '#/definitions/response.FolderSwag'
      produces:
      - application/json
      responses:
        "200":
          description: Update success status
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad id
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Not Authorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Failed to update label
          schema:
            $ref: '#/definitions/response.Response'
      summary: UpdateLabel label a user
      tags:
      - labels-gmail
  /api/v1/gmail/labels:
    get:
      description: Get a list of all labels
      parameters:
      - description: CSRF Token
        in: header
        name: X-Csrf-Token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of all labels
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Not Authorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: JSON encoding error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Display the list of labels
      tags:
      - labels-gmail
  /api/v1/gmail/labels/email/{id}:
    get:
      description: Get a list of all labels
      parameters:
      - description: CSRF Token
        in: header
        name: X-Csrf-Token
        required: true
        type: string
      - description: ID of the email message
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of all labels
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Not Authorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: JSON encoding error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Display the list of labels
      tags:
      - labels-gmail
  /api/v1/questions:
    get:
      consumes:
      - application/json
      description: GetAllQuestions Handles questions.
      parameters:
      - description: CSRF Token
        in: header
        name: X-Csrf-Token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Get questions successful
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to get questions
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: GetAllQuestions questions
      tags:
      - question
    post:
      consumes:
      - application/json
      description: AddQuestion Handles question.
      parameters:
      - description: CSRF Token
        in: header
        name: X-Csrf-Token
        required: true
        type: string
      - description: Question message in JSON format
        in: body
        name: question
        required: true
        schema:
          $ref: '#/definitions/response.QuestionSwag'
      produces:
      - application/json
      responses:
        "200":
          description: Add question successful
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to add question
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: AddQuestion question
      tags:
      - question
  /api/v1/statistics:
    get:
      consumes:
      - application/json
      description: GetStatistics Handles statistics.
      parameters:
      - description: CSRF Token
        in: header
        name: X-Csrf-Token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Get statistics successful
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to get statistics
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: GetStatistics statistics
      tags:
      - question
  /api/v1/testAuth/auth-vk/auth/{code}:
    get:
      consumes:
      - application/json
      description: Handles user auth VK.
      parameters:
      - description: Code of the oauth message
        in: path
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Auth successful
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Failed to auth user
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: User auth VK
      tags:
      - auth-vk
  /api/v1/testAuth/auth-vk/getAuthUrlLoginVK:
    get:
      consumes:
      - application/json
      description: Handles user login.
      produces:
      - application/json
      responses:
        "200":
          description: Successful
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Failed to get url
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: URL VK
      tags:
      - auth-vk
  /api/v1/testAuth/auth-vk/getAuthUrlSignUpVK:
    get:
      consumes:
      - application/json
      description: Handles user signup.
      produces:
      - application/json
      responses:
        "200":
          description: Successful
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Failed to get url
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: URL VK
      tags:
      - auth-vk
  /api/v1/testAuth/auth-vk/loginVK/{code}:
    get:
      consumes:
      - application/json
      description: LoginVK Handles user.
      parameters:
      - description: Code of the oauth message
        in: path
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Login successful
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Invalid credentials
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to create session
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: LoginVK User
      tags:
      - auth-vk
  /api/v1/testAuth/auth-vk/signupVK:
    post:
      consumes:
      - application/json
      description: Handles user signup VK.
      parameters:
      - description: Auth Token
        in: header
        name: AuthToken
        required: true
        type: string
      - description: New user details for signup
        in: body
        name: newUser
        required: true
        schema:
          $ref: '#/definitions/response.UserVKSwag'
      produces:
      - application/json
      responses:
        "200":
          description: Signup successful
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Failed to add user
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: User signup VK
      tags:
      - auth-vk
  /api/v1/user/avatar/delete:
    delete:
      consumes:
      - application/json
      description: Handles requests to delete user avatar.
      parameters:
      - description: CSRF Token
        in: header
        name: X-Csrf-Token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User avatar deleted successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Invalid user ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Not authorized
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Delete user avatar
      tags:
      - users
  /api/v1/user/avatar/upload:
    post:
      consumes:
      - multipart/form-data
      description: Handles requests to upload user avatar.
      parameters:
      - description: CSRF Token
        in: header
        name: X-Csrf-Token
        required: true
        type: string
      - description: Avatar file to upload
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: File uploaded and saved successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Error processing file or failed to get file
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Upload user avatar
      tags:
      - users
  /api/v1/user/count:
    get:
      consumes:
      - application/json
      description: Handles requests to get count user.
      parameters:
      - description: CSRF Token
        in: header
        name: X-Csrf-Token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "400":
          description: Invalid user ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Not authorized
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Get count user
      tags:
      - users
  /api/v1/user/delete/{id}:
    delete:
      consumes:
      - application/json
      description: Handles requests to delete user data.
      parameters:
      - description: CSRF Token
        in: header
        name: X-Csrf-Token
        required: true
        type: string
      - description: User ID to delete
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: User data deleted successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Invalid user ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Not authorized
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Delete user data
      tags:
      - users
  /api/v1/user/get:
    get:
      description: Retrieve the user associated with the current session
      parameters:
      - description: CSRF Token
        in: header
        name: X-Csrf-Token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User details
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Not Authorized
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Get user by session
      tags:
      - users
  /api/v1/user/update:
    put:
      consumes:
      - application/json
      description: Handles requests to update user data.
      parameters:
      - description: CSRF Token
        in: header
        name: X-Csrf-Token
        required: true
        type: string
      - description: Updated user data
        in: body
        name: updatedUser
        required: true
        schema:
          $ref: '#/definitions/response.UserSwag'
      produces:
      - application/json
      responses:
        "200":
          description: User data updated successfully
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Not authorized
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Update user data
      tags:
      - users
  /api/v1/verify-auth:
    get:
      description: Verify user authentication using sessions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Not Authorized
          schema:
            $ref: '#/definitions/response.Response'
      summary: Verify user authentication
      tags:
      - users
swagger: "2.0"
