name: CI/CD

on:
  pull_request:
    branches:
      - main
      - develop
    types:
      - closed

jobs:
  tests:
    name: Tests check
    runs-on: ubuntu-latest
    steps:
      - name: Installation Go v1.22
        uses: actions/setup-go@v2
        with:
          go-version: '1.22.x'
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Start tests
        run: |
          go get github.com/golang/mock/gomock
          go install github.com/golang/mock/mockgen
          go get golang.org/x/tools/go/packages
          make mock
          make tests

  linter:
    name: Linter check
    runs-on: ubuntu-latest
    steps:
      - name: Installation Go v1.22
        uses: actions/setup-go@v2
        with:
          go-version: '1.22.x'
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run linter
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.55.2
          $(go env GOPATH)/bin/golangci-lint run --timeout=5m --disable=staticcheck,gosimple

  build:
    name: Run Build
    needs: [ linter, tests ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Shutdown process
        run: make down
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build and push authorization
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./cmd/auth/Dockerfile
          platforms: linux/amd64
          push: true
          tags: fedasov03/mailhub-auth:latest
      - name: Build and push email
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./cmd/email/Dockerfile
          platforms: linux/amd64
          push: true
          tags: fedasov03/mailhub-email:latest
      - name: Build and push folder
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./cmd/folder/Dockerfile
          platforms: linux/amd64
          push: true
          tags: fedasov03/mailhub-folder:latest
      - name: Build and push mail
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64
          push: true
          tags: fedasov03/mailhub-mail:latest
      - name: Build and push questionnaire
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./cmd/questionnaire/Dockerfile
          platforms: linux/amd64
          push: true
          tags: fedasov03/mailhub-questionnaire:latest
      - name: Build and push session
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./cmd/session/Dockerfile
          platforms: linux/amd64
          push: true
          tags: fedasov03/mailhub-session:latest
      - name: Build and push user
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./cmd/user/Dockerfile
          platforms: linux/amd64
          push: true
          tags: fedasov03/mailhub-user:latest
      - name: Build and push smtp
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./cmd/smtp/Dockerfile
          platforms: linux/amd64
          push: true
          tags: fedasov03/mailhub-smtp:latest

  deploy:
    name: Backend deploy
    needs: [ build ]
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    steps:
       - name: git pull
         uses: appleboy/ssh-action@master
         with:
           host: ${{ secrets.HOST }}
           username: ${{ secrets.USER }}
           key: ${{ secrets.SSH_PRIVATE_KEY }}
           script: | 
             cd backend_4/2024_1_Refugio/
             sudo git pull
       - name: Docker container stop
         uses: appleboy/ssh-action@master
         with:
           host: ${{ secrets.HOST }}
           username: ${{ secrets.USER }}
           key: ${{ secrets.SSH_PRIVATE_KEY }}
           script: |
             cd backend_4/2024_1_Refugio/
             if [ -z "$(sudo docker ps -q)" ]; then
                echo "No running containers found."
             else
                sudo docker stop $(sudo docker ps -a -q)
                sudo docker rm $(sudo docker ps -a -q)
             fi
       - name: Pull docker images
         uses: appleboy/ssh-action@master
         with:
           host: ${{ secrets.HOST }}
           username: ${{ secrets.USER }}
           key: ${{ secrets.SSH_PRIVATE_KEY }}
           script: |
             cd backend_4/2024_1_Refugio/
             sudo docker-compose -f docker-compose-cd.yml pull
       - name: Run docker-compose
         uses: appleboy/ssh-action@master
         with:
           host: ${{ secrets.HOST }}
           username: ${{ secrets.USER }}
           key: ${{ secrets.SSH_PRIVATE_KEY }}
           script: |
             cd backend_4/2024_1_Refugio/
             sudo docker-compose -f docker-compose-cd.yml up --build -d
       - name: Clear old images and containers
         uses: appleboy/ssh-action@master
         with:
           host: ${{ secrets.HOST }}
           username: ${{ secrets.USER }}
           key: ${{ secrets.SSH_PRIVATE_KEY }}
           script: |
             cd backend_4/2024_1_Refugio/
             sudo docker container prune -f
             sudo docker images prune